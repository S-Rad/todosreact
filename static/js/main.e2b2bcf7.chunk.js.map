{"version":3,"sources":["slices/todos.js","components/LeftToDoList.js","components/App.js","components/RightMatrix.js","components/AddToDoField.js","components/ToDoItem.js","store.js","serviceWorker.js","index.js"],"names":["todosslice","createSlice","name","initialState","reducers","add","state","action","concat","id","uuidv4","text","payload","active","category","remove","filter","todo","toggle","produce","draftstate","index","findIndex","categorize","LeftToDoList","dispatch","useDispatch","toDos","useSelector","todos","Box","m","flexGrow","onClick","actions","toDo","map","key","useStyles","makeStyles","theme","root","display","breakpoints","down","flexDirection","up","App","classes","className","CssBaseline","wrapper","flexWrap","matrixfield","width","RightMatrix","AddToDoField","props","useState","toDoText","setToDoText","TextField","label","variant","value","onChange","event","target","fullWidth","Button","ToDoItem","alignItems","justifyContent","style","color","textDecoration","Checkbox","checked","NativeSelect","persistedReducer","persistReducer","storage","combineReducers","reducer","store","configureStore","middleware","persistStore","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","createMuiTheme","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2b2bcf7.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\n\nconst todosslice = createSlice({\n  name: \"todos\",\n  initialState: [],\n  reducers: {\n    add: (state, action) =>\n      state.concat({\n        id: uuidv4(),\n        text: action.payload.text,\n        active: true,\n        category: \"Unsorted\",\n      }),\n    remove: (state, action) =>\n      state.filter((todo) => todo.id !== action.payload.id),\n    toggle: (state, action) =>\n      produce(state, (draftstate) => {\n        const index = draftstate.findIndex(\n          (todo) => todo.id === action.payload.id\n        );\n        draftstate[index].active = !draftstate[index].active;\n      }),\n    categorize: (state, action) =>\n      produce(state, (draftstate) => {\n        const index = draftstate.findIndex(\n          (todo) => todo.id === action.payload.id\n        );\n        draftstate[index].category = action.payload.category;\n      }),\n  },\n});\nexport default todosslice;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport todosslice from \"../slices/todos\";\nimport { Box } from \"@material-ui/core\";\nimport { AddToDoField, ToDoItem } from \".\";\n\nconst LeftToDoList = () => {\n  const dispatch = useDispatch();\n  const toDos = useSelector((state) => state.todos);\n\n  const addToDo = (text) => {\n    dispatch(todosslice.actions.add({text}));\n  };\n\n  return (\n    <Box m={2} flexGrow={1}>\n      <AddToDoField onClick={addToDo} />\n      <Box>\n        Unsorted To Dos\n        {toDos\n          .filter((toDo) => toDo.active)\n          .map((toDo) => (\n            <ToDoItem {...toDo} key={toDo.id} />\n          ))}\n      </Box>\n      <Box>\n        Finished To Dos\n        {toDos\n          .filter((toDo) => !toDo.active)\n          .map((toDo) => (\n            <ToDoItem {...toDo} key={toDo.id} />\n          ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default LeftToDoList;\n","import React from \"react\";\nimport { Box, makeStyles, CssBaseline } from \"@material-ui/core\";\nimport { LeftToDoList, RightMatrix } from \".\";\n//init\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"row\",\n    },\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <CssBaseline />\n\n      <LeftToDoList />\n      <RightMatrix />\n    </Box>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  matrixfield: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"50%\",\n    },\n  },\n}));\n\nconst RightMatrix = () => {\n  const classes = useStyles();\n  return (\n    <Box m={2} flexGrow={2} className={classes.wrapper}>\n      <Box className={classes.matrixfield}>Important, Urgent</Box>\n      <Box className={classes.matrixfield}>Important, Not Urgent</Box>\n      <Box className={classes.matrixfield}>Not Important, Urgent</Box>\n      <Box className={classes.matrixfield}>Not Important, Not Urgent</Box>\n    </Box>\n  );\n};\n\nexport default RightMatrix;\n","import React, { useState } from \"react\";\nimport { Box, TextField, Button } from \"@material-ui/core\";\n\nconst AddToDoField = (props) => {\n  const [toDoText, setToDoText] = useState(\"\");\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <TextField\n        id=\"filled-basic\"\n        label=\"Filled\"\n        variant=\"filled\"\n        value={toDoText}\n        onChange={(event) => setToDoText(event.target.value)}\n        fullWidth\n      />\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          props.onClick(toDoText);\n          setToDoText(\"\");\n        }}\n      >\n        +\n      </Button>\n    </Box>\n  );\n};\nexport default AddToDoField;\n","import React from \"react\";\nimport { Box, Checkbox, Button, NativeSelect } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport todosslice from \"../slices/todos\";\n\nconst ToDoItem = ({ id, text, active, category }) => {\n  const dispatch = useDispatch();\n\n  const activeStyle = {\n    color: \"#000000\",\n    textDecoration: \"none\",\n  };\n  const inactiveStyle = {\n    color: \"#A9A9A9\",\n    textDecoration: \"line-through\",\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n      <Box style={active ? activeStyle : inactiveStyle}>\n        <Checkbox\n          onClick={() => dispatch(todosslice.actions.toggle({ id }))}\n          checked={!active}\n        />\n        {text}\n      </Box>\n      <Box>\n        {\" \"} \n        {/*auf value zugreifen und an store uebergeben*/}\n        <NativeSelect onChange={() => dispatch(todosslice.actions.categorize({ id } ))}>\n          <option value={null}>Unsorted</option>\n          <option value=\"a1\">Important, Urgent</option>\n          <option value=\"a2\">Important, Not Urgent</option>\n          <option value=\"b1\">Not Important, Urgent</option>\n          <option value=\"b2\">\n            Not Important, Not Urgent\n          </option>\n        </NativeSelect>\n        <Button\n          variant=\"contained\"\n          onClick={() => dispatch(todosslice.actions.remove({ id }))}\n        >\n          Yeet\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ToDoItem;\n","import { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport todosslice from \"./slices/todos\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistedReducer = persistReducer(\n  {\n    key: \"root\",\n    storage\n  },\n  combineReducers({ todos: todosslice.reducer })\n);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: []\n});\n\npersistStore(store);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={createMuiTheme()}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}